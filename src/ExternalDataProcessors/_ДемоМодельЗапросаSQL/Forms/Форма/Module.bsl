&НаКлиенте
Перем ПараметрыСоединенияСервер1;
&НаКлиенте
Перем ПараметрыСоединенияСервер2;

&НаКлиенте
Процедура УправлениеВидимостьюДоступностью()
	Элементы.ГруппаНастройки.Заголовок = СтрШаблон("Сервер: %1, БД: %2", Объект.Сервер, Объект.ИмяБазыДанных);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметрыСоединения()
	ПараметрыСоединенияСервер1 = РаботаС_ADODB.ПараметрыСоединения();
	ПараметрыСоединенияСервер2 = РаботаС_ADODB.ПараметрыСоединения();
	Если Объект.ЭтоПодключениеКРабочейБазе Тогда
		//  Сервер прод 1
		ПараметрыСоединенияСервер1.Сервер = Объект.Сервер;
		ПараметрыСоединенияСервер1.ИмяБазыДанных = Объект.ИмяБазыДанных;
		ПараметрыСоединенияСервер1.Схема1С = "dbo";
		//  Сервер прод 2
		ПараметрыСоединенияСервер2.Сервер = Объект.Сервер;
		ПараметрыСоединенияСервер2.ИмяБазыДанных = Объект.ИмяБазыДанных;
		ПараметрыСоединенияСервер2.Схема1С = "dbo";
	Иначе
		//  Сервер тест 1
		ПараметрыСоединенияСервер1.Сервер = Объект.Сервер;
		ПараметрыСоединенияСервер1.ИмяБазыДанных = Объект.ИмяБазыДанных;
		ПараметрыСоединенияСервер1.Схема1С = "dbo";
		//  Сервер тест 2
		ПараметрыСоединенияСервер2.Сервер = Объект.Сервер;
		ПараметрыСоединенияСервер2.ИмяБазыДанных = Объект.ИмяБазыДанных;
		ПараметрыСоединенияСервер2.Схема1С = "dbo";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаАлгоритм1(Команда)
	ЗаполнитьПараметрыСоединения();
	//  Формирование результата на сервере 1. Выбрать не помеченные заказы с пустым договором
	Соединение1 = РаботаС_ADODB.Соединение(ПараметрыСоединенияСервер1);
	Таблица = РаботаС_ADODB.ВыполнитьЗапрос(Соединение1, ТекстЗапросаНеПомеченныеЗаказыСПустымДоговором(ПараметрыСоединенияСервер1));
	РаботаС_ADODB.ЗакрытьСоединение(Соединение1);
	Если НЕ ЗначениеЗаполнено(Таблица) ИЛИ НЕ ЗначениеЗаполнено(Таблица.Строки) Тогда
		Объект.ТекстЗапроса = "[]";
		Возврат;
	КонецЕсли;
	//  Обработка результата на сервере 2
	ТекстЗапроса = ТекстЗапросаПометитьНаУдалениеЗаказыИзРезультата(ПараметрыСоединенияСервер2, Таблица);
	Объект.ТекстЗапроса = ТекстЗапроса;
	Если Объект.ЭтоПодключениеКРабочейБазе Тогда
		Возврат;
	КонецЕсли;
	Соединение2 = РаботаС_ADODB.Соединение(ПараметрыСоединенияСервер2);
	РаботаС_ADODB.ВыполнитьЗапрос(Соединение2, ТекстЗапроса);
	РаботаС_ADODB.ЗакрытьСоединение(Соединение2);
КонецПроцедуры

&НаКлиенте
Процедура КомандаАлгоритмОтмены(Команда)
	Если Объект.ЭтоПодключениеКРабочейБазе Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьПараметрыСоединения();
	Соединение2 = РаботаС_ADODB.Соединение(ПараметрыСоединенияСервер2);
	ТекстЗапроса = ТекстЗапросаУбратьПометкуУдаленияСЗаказовСПустымДоговором(ПараметрыСоединенияСервер1);
	Объект.ТекстЗапроса = ТекстЗапроса;
	РаботаС_ADODB.ВыполнитьЗапрос(Соединение2, ТекстЗапроса);
	РаботаС_ADODB.ЗакрытьСоединение(Соединение2);
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаНеПомеченныеЗаказыСПустымДоговором(ПараметрыСоединения)
	МодельЗапросаSQL = Общий.МодельЗапросаSQL();
	МодельЗапросаSQL
		.Схема1С(ПараметрыСоединения.Схема1С)
		.Схема(ПараметрыСоединения.Схема)
	;//  ЗАПРОС ПАКЕТА. _ДемоЗаказПокупателя
	МодельЗапросаSQL.ЗапросПакета("_ДемоЗаказПокупателя")
	    .Выбрать()
	        .Источник("Документ._ДемоЗаказПокупателя")
	        .Поле("_ДемоЗаказПокупателя.Номер")
	        .Поле("_ДемоЗаказПокупателя.Дата")
	        .Поле("_ДемоЗаказПокупателя.Организация")
	        .Поле("_ДемоЗаказПокупателя.Контрагент")
	        .Поле("_ДемоЗаказПокупателя.Договор")
	        .Поле("_ДемоЗаказПокупателя.Проведен")
	        .Поле("_ДемоЗаказПокупателя.ПометкаУдаления")
	        .Отбор(СтрШаблон("%1 = %2", МодельЗапросаSQL.ИмяПоляХранения("_ДемоЗаказПокупателя.Договор"), МодельЗапросаSQL.ИД()))
			.Отбор(СтрШаблон("%1 = 0x00", МодельЗапросаSQL.ИмяПоляХранения("_ДемоЗаказПокупателя.ПометкаУдаления")))
	;
	ТекстЗапроса = МодельЗапросаSQL.ПолучитьТекстЗапроса();
	Возврат ТекстЗапроса;
КонецФункции	

&НаСервере
Функция ТекстЗапросаПометитьНаУдалениеЗаказыИзРезультата(ПараметрыСоединения, Таблица)
	МодельЗапросаSQL = Общий.МодельЗапросаSQL();
	МодельЗапросаSQL
		.Схема1С(ПараметрыСоединения.Схема1С)
	;//  ЗАПРОС ПАКЕТА. _ДемоЗаказПокупателя
	МодельЗапросаSQL.ЗапросПакета("_ДемоЗаказПокупателя").Поместить("#ТАБЛИЦА")
	    .Выбрать()
	        .Источник(Таблица, "Результат")
	        .Поле("Номер")
	        .Поле("Дата")
	        .Поле("Организация")
	        .Поле("Контрагент")
	        .Поле("Договор")
	        .Поле("Проведен")
	        .Поле("ПометкаУдаления")
	;
	МодельЗапросаSQL.ЗапросПакета()
		.Выбрать().Различные()
			.Источник("#ТАБЛИЦА")
			.Источник("Документ._ДемоЗаказПокупателя")
			.ВнутреннееСоединение("#ТАБЛИЦА", "_ДемоЗаказПокупателя")
				.Связь("Номер = Номер")
				.УсловиеСвязи(СтрШаблон("%1 = 0x00", МодельЗапросаSQL.ИмяПоляХранения("_ДемоЗаказПокупателя.ПометкаУдаления")))
			//
			.Поле("_ДемоЗаказПокупателя.Ссылка")
		.Изменить("_ДемоЗаказПокупателя")
			.Установить("ПометкаУдаления", "0x01")
	;
	ТекстЗапроса = МодельЗапросаSQL.ПолучитьТекстЗапросаПакета(); 
	Возврат ТекстЗапроса;	
КонецФункции

&НаСервере
Функция ТекстЗапросаУбратьПометкуУдаленияСЗаказовСПустымДоговором(ПараметрыСоединения)
	МодельЗапросаSQL = Общий.МодельЗапросаSQL();
	МодельЗапросаSQL
		.Схема1С(ПараметрыСоединения.Схема1С)
		.Схема(ПараметрыСоединения.Схема)
	;//  ЗАПРОС ПАКЕТА. _ДемоЗаказПокупателя
	МодельЗапросаSQL.ЗапросПакета("_ДемоЗаказПокупателя")
	    .Выбрать()
	        .Источник("Документ._ДемоЗаказПокупателя")
	        .Отбор(СтрШаблон("%1 = %2", МодельЗапросаSQL.ИмяПоляХранения("_ДемоЗаказПокупателя.Договор"), МодельЗапросаSQL.ИД()))
			.Отбор(СтрШаблон("%1 = 0x01", МодельЗапросаSQL.ИмяПоляХранения("_ДемоЗаказПокупателя.ПометкаУдаления")))
		.Изменить("_ДемоЗаказПокупателя")
			.Установить("ПометкаУдаления", "0x00")
	;
	ТекстЗапроса = МодельЗапросаSQL.ПолучитьТекстЗапроса();
	Возврат ТекстЗапроса;
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ТипСУБД = "SQLServer";
	Объект.АутентификацияNTLM = Истина;
	Объект.СмещениеДат2000 = Истина;
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	ФорматВыгрузки = "EDT";
	Источник = "Каталог";
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	Состав = СтрРазделить(СтрокаСоединения, ";");
	КлючЗначениеСервер = СтрРазделить(Состав[0], "=");
	Если КлючЗначениеСервер[0] = "Srvr" Тогда
		КлючЗначениеИмяБазыДанных = СтрРазделить(Состав[1], "=");
		Объект.Сервер = СтрЗаменить(КлючЗначениеСервер[1], """", "");
		Объект.ИмяБазыДанных = СтрЗаменить(КлючЗначениеИмяБазыДанных[1], """", "");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеВидимостьюДоступностью();
КонецПроцедуры

&НаКлиенте
Процедура СерверПриИзменении(Элемент)
	УправлениеВидимостьюДоступностью();
КонецПроцедуры

&НаКлиенте
Процедура ИмяБазыДанныхПриИзменении(Элемент)
	УправлениеВидимостьюДоступностью();
КонецПроцедуры
